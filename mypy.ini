[mypy]
; -----------------------------------------------------------------------------
; IMPORT DISCOVERY
; -----------------------------------------------------------------------------

; Enables PEP 420 style namespace packages. (bool, default False)
;namespace_packages = False

; Suppress error messages about unresolvable imports. (bool, default False)
ignore_missing_imports = True

; -----------------------------------------------------------------------------
; PLATFORM CONFIGURATION
; -----------------------------------------------------------------------------

; Specify Python version used to parse and check target program. (string)
python_version = 3.12

; Specify platform for target program. (string, default sys.platform)
platform = win32

; -----------------------------------------------------------------------------
; DISALLOW DYNAMIC TYPING
; -----------------------------------------------------------------------------

; Disallow all expressions in module that have type Any. (bool, default False)
disallow_any_expr = False

; Disallow functions with Any in signatures after decorator transformation. (bool, default False)
disallow_any_decorated = False

; Disallow explicit Any in annotations and generic type parameters. (bool, default False)
disallow_any_explicit = True

; Disallow generic types that do not specify explicit type parameters. (bool, default False)
disallow_any_generics = False

; Disallow subclassing value of type Any. (bool, default False)
disallow_subclassing_any = False

; -----------------------------------------------------------------------------
; UNTYPED DEFINITIONS AND CALLS
; -----------------------------------------------------------------------------

; Disallow functions without annotations from annotated functions. (bool, default False)
disallow_untyped_calls = True

; Disallow functions without annotations or with incomplete annotations. (bool, default False)
disallow_untyped_defs = True

; Disallow functions with incomplete annotations. (bool, default False)
disallow_incomplete_defs = True

; Typecheck interior of functions without annotations. (bool, default False)
check_untyped_defs = True

; -----------------------------------------------------------------------------
; NONE AND OPTIONAL HANDLING
; -----------------------------------------------------------------------------

; Treat None-default arguments by not implicitly making their type Optional. (bool, default False)
no_implicit_optional = True

; Enable strict Optional checks. If False, treat None as compatible with every type. (bool, default True)
strict_optional = True

; -----------------------------------------------------------------------------
; CONFIGURING WARNINGS
; -----------------------------------------------------------------------------

; Warn about casting an expression to inferred type. (bool, default False)
warn_redundant_casts = True

; Show warning for missing return statements on some execution paths. (bool, default True)
warn_no_return = True

; Show warning when code is inferred as unreachable or redundant. (bool, default False)
warn_unreachable = True

; -----------------------------------------------------------------------------
; MISCELLANEOUS STRICTNESS FLAGS
; -----------------------------------------------------------------------------

; Prohibit equality, identity, and container checks between non-overlapping types. (bool, default False)
strict_equality = True
